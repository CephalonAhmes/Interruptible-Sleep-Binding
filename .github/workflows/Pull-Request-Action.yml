name: Pull-Request-Action

on:
  pull_request:
    branch: [ master ]
    types: [ unlabeled, labeled, reopened, opened, synchronize, edited]


permissions: write-all

jobs:
  Get-New-Version-Number:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump-semver.outputs.new_version  }}
    steps:
      - uses: actions/checkout@v2
      - id: get-latest-tag
        shell: pwsh
        env:
          pull_request_id: ${{github.event.pull_request.number}}
        run: |
          $tags = git tag -l
          $latest_tag = $tags | where-object{ $_ -match "b0\.$($Env:pull_request_id).*" } | select -Last 1
          if($latest_tag){
            echo "::set-output name=latest_tag::$($latest_tag.substring(1))"
          }

          else{
            echo "::set-output name=latest_tag::0.$($Env:pull_request_id).0"
          }


      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.latest_tag }}
          level: prerelease


  Validate-Pull-Request-Labels:
    name: Validate-Pull-Request-Action
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: GetCurrentPRLabel
        uses: zwaldowski/match-label-action@v1
        with:
          allowed: major, minor, patch

      - name: Label-Status-Comment
        if: failure()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          hide_and_recreate: true
          header: Label-Status-Comment
          message: "Invalid pull request labels, make sure to set one and only one of the following labels: major, minor"
          
      - name: Label-Status-Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Label-Status-Comment
          message: "PR label checks passed successfully âœ”"

  Build-Wheel:
    needs: [Get-New-Version-Number]
    name: Build and test wheels on ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.4'
      
      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt --upgrade

      - name: compile
        env:
          VERSIONNUMBER: ${{needs.Get-New-Version-Number.outputs.new_version}}
        run: |
          python ./setup.py bdist_wheel clean
      
      - name: Test compiled wheel
        shell: pwsh
        run: |
          $wheel = Get-ChildItem ./dist/*.whl | select -First 1
          if(-not $wheel){
            Write-Error "No wheel found"
            exit 1
          }
          python -m pip install $wheel.FullName
          python -m pytest
      
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*


  Build-Sdist:
    needs: [Get-New-Version-Number]
    name: Build and test sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.4'

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt --upgrade

      - name: compile
        env:
          VERSIONNUMBER: ${{needs.Get-New-Version-Number.outputs.new_version}}
        run: |
          python ./setup.py sdist clean
      
      - name: Test sdist install
        shell: pwsh
        run: |
          $sdist = Get-ChildItem ./dist/*.tar.gz | select -First 1
          if(-not $sdist){
            Write-Error "No wheel found"
            exit 1
          }
          python -m pip install $sdist.FullName
          python -m pytest

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*


  Create-Pre-Release:
    needs: [Build-Sdist, Build-Wheel, Get-New-Version-Number]
    name: Create-Pre-Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: download-artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/


      - name: Create-Prerelease
        id: Create-Prerelease
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          name: ${{ github.event.pull_request.title }}
          tag_name: "b${{needs.Get-New-Version-Number.outputs.new_version}}"
          files: dist/*
      
      - name: Create-Release-Sticky-Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          hide_and_recreate: true
          header: Pre-Release Header
          message: |
            [ Pre-release b${{needs.Get-New-Version-Number.outputs.new_version}} was built successfully](${{ steps.Create-Prerelease.outputs.url }})


      - uses: geekyeggo/delete-artifact@v1
        with:
          name: dist