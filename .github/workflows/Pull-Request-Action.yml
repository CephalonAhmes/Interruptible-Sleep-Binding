name: Pull-Request-Action

on:
  pull_request:
    branches:
      - master



permissions: write-all

jobs:
  Get-New-Version-Number:
    uses: ./.github/workflows/Get-New-Version-Number.yml
    with:
      change_type: patch
      match: 'b0\.${{github.event.pull_request.number}}.*'
      default: "0.${{github.event.pull_request.number}}.0"

  Get-Changelog:
    uses: ./.github/workflows/Get-Changelog.yml

  Build-Wheel:
    needs: [Get-New-Version-Number, Get-Changelog]
    uses: ./.github/workflows/Build-Wheels.yml
    with:
      version_number: ${{needs.Get-New-Version-Number.outputs.new_version}}

  Build-Sdist:
    needs: [Get-New-Version-Number, Get-Changelog]
    uses: ./.github/workflows/Build-Sdists.yml
    with:
      version_number: ${{needs.Get-New-Version-Number.outputs.new_version}}

  Create-Pre-Release:
    needs: [Build-Sdist, Build-Wheel, Get-New-Version-Number, Get-Changelog]
    name: Create-Pre-Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: download-artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Create-Prerelease
        id: Create-Prerelease
        uses: softprops/action-gh-release@v1
        with:
          target_commitish: ${{ github.event.pull_request.head.sha }}
          prerelease: true
          body: ${{needs.Get-Changelog.outputs.changelog}}
          name: b${{needs.Get-New-Version-Number.outputs.new_version}}
          tag_name: b${{needs.Get-New-Version-Number.outputs.new_version}}
          files: dist/*
      
      - name: Create-Release-Sticky-Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          hide_and_recreate: true
          header: Pre-Release Header
          message: |
            [ Pre-release b${{needs.Get-New-Version-Number.outputs.new_version}} was built successfully](${{ steps.Create-Prerelease.outputs.url }})

      - name: Upload-To-Pypi
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  Post-Flow-Cleanup:
    needs: [Build-Sdist, Build-Wheel, Create-Pre-Release]
    if: always()
    uses: ./.github/workflows/Post-Flow-Cleanup.yml
